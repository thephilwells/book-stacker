{"version":3,"sources":["components/Book.js","components/Graph.js","components/Scene.js","components/Button.js","App.js","index.js"],"names":["startingBookWidth","bookHeightMultiplier","startingBookHeight","bookWidthMultiplier","Graph","noOfVertices","this","AdjList","Map","verticesInGraph","Set","v","parseInt","set","w","get","push","visited","i","DFSUtil","vert","add","getNeighbors","getElem","Bodies","Matter","palette","getSizeBook","size","h","scaleRatio","window","devicePixelRatio","Math","floor","random","book","rectangle","chamfer","radius","render","strokeStyle","styleBook","fillStyle","shift","getColorName","sprite","texture","gameStatus","affinityCondition","document","getElementById","bookA","bookB","Scene","props","state","Engine","Render","Runner","World","Body","Mouse","Events","MouseConstraint","wallThickness","engine","create","element","refs","scene","options","width","innerWidth","height","innerHeight","wireframes","background","books","world","isStatic","label","forEach","undefined","color","amountOfBooksInColor","booksInAffinity","pairs","shuffledBooks","sort","setTimeout","numberOfAverageBooks","mouse","canvas","mouseConstraint","constraint","stiffness","visible","on","event","length","pair","bodyA","bodyB","lineWidth","id","delete","body","collisionFilter","category","console","log","bodies","setStatic","run","setInterval","update","result","sets","values","next","value","every","s","colorGraph","addVertex","split","addEdge","getGraph","dfs","victoryCondition","ctx","querySelector","getContext","font","fillText","victorySequence","ref","React","Component","Button","text","action","onClick","buttonAction","style","display","classList","toggle","location","reload","App","className","ReactDOM"],"mappings":"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","file":"static/js/main.bbfb5d32.chunk.js","sourcesContent":["import Matter from \"matter-js\";\n\nconst Bodies = Matter.Bodies\n\nlet startingBookWidth\nlet bookHeightMultiplier\nlet startingBookHeight\nlet bookWidthMultiplier\nconst dropX = 190;\nconst dropY = 100;\n\nconst colors = {\n  '#0496FF': 'light-blue',\n  '#D81159': 'magenta',\n  '#FFBC42': 'yellow',\n  '#8F2D56': 'purple',\n  '#006BA6': 'dark-blue'\n}\n\nconst palette = ['#F5CC3D', '#D1AA6E', '#FD7442', '#85B4FA', '#232831']\n\nexport const getSizeBook = (size) => {\n  let h, w\n  const devicePixelRatio = window.devicePixelRatio\n  const scaleRatio = devicePixelRatio / 4\n  switch (size) {\n    case 'small':\n      startingBookWidth = 60;\n      bookHeightMultiplier = 70;\n      startingBookHeight = 150;\n      bookWidthMultiplier = 40;\n      break\n    case 'large':\n      startingBookWidth = 80;\n      bookHeightMultiplier = 70;\n      startingBookHeight = 240;\n      bookWidthMultiplier = 60;\n      break\n    case 'medium':\n    default:\n      startingBookWidth = 60;\n      bookHeightMultiplier = 70;\n      startingBookHeight = 240;\n      bookWidthMultiplier = 20;\n      break\n    }\n  h = (startingBookHeight + (Math.floor((0.5 + Math.random() * bookHeightMultiplier))) * scaleRatio)\n  w = (startingBookWidth + (Math.floor((0.5 + Math.random()* bookWidthMultiplier))) * scaleRatio)\n  const book = Bodies.rectangle(dropX, dropY, w, h, {\n    chamfer: {radius: 3 * scaleRatio},\n    render: {\n      strokeStyle: 'black',\n    }\n  })\n  const styledBook = styleBook(book)\n  return styledBook\n}\n\nconst styleBook = (book) => {\n  book.render.fillStyle = palette.shift()\n  palette.push(book.render.fillStyle)\n  const colorName = getColorName(book.render.fillStyle)\n  book.render.sprite = {\n    texture: './assets/book/black-label-rest.png',\n  }\n  debugger\n  return book\n}\n\nconst getColorName = (fillStyle) => {\n  switch (fillStyle) {\n    case '#F5CC3D':\n      return 'yellow'\n    case '#D1AA6E':\n      return 'brown'\n    case '#FD7442':\n      return 'red'\n    case '#85B4FA':\n      return 'blue'\n    case '#232831':\n      return 'black'\n  }\n}\n","export class Graph {\n  constructor(noOfVertices) {\n    this.noOfVertices = noOfVertices\n    this.AdjList = new Map()\n    this.verticesInGraph = new Set()\n  }\n\n    addVertex(v) {\n      v = parseInt(v)\n      this.AdjList.set(v, [])\n    }\n\n    addEdge(v, w) {\n      v = parseInt(v)\n      w = parseInt(w)\n      this.AdjList.get(v) ? this.AdjList.get(v).push(w) : this.AdjList.set(v, [w])\n      this.AdjList.get(w) ? this.AdjList.get(w).push(v) : this.AdjList.set(w, [v])\n    }\n\n    getGraph() {\n      return this.AdjList\n    }\n\n    dfs(v) {\n      const visited = []\n      for (let i = 0; i < this.noOfVertices ; i++) {\n        visited[i] = false\n      }\n\n      this.DFSUtil(v, visited)\n      return this.verticesInGraph\n    }\n\n    DFSUtil(vert, visited) {\n      visited[vert] = true\n      this.verticesInGraph.add(vert)\n\n      let getNeighbors = this.AdjList.get(vert)\n\n      for (var i in getNeighbors) {\n        let getElem = getNeighbors[i]\n        if (!visited[getElem]) {\n          this.DFSUtil(getElem, visited)\n        }\n      }\n    }\n}\n","import React from \"react\";\nimport Matter from \"matter-js\";\nimport { Graph } from './Graph'\n\nimport { getSizeBook } from './Book'\n\nconst alternateColorRule = false\nconst ghosts = false\nconst gameStatus = {}\nlet lastColorDragged\n\nconst openModal = (modal) => {\n\tmodal.style.display = 'flex'\n\tdocument.querySelector('main').classList.toggle('obscured')\n}\n\n      // HTML elements\nconst helpButton = document.getElementById('help-button')\n\nconst beginAffinity = (bookA, bookB) => {\n  bookA.render.lineWidth = 6\n  bookB.render.lineWidth = 6\n  gameStatus[bookA.render.color].pairs.add(`${bookA.id}-${bookB.id}`)\n  gameStatus[bookA.render.color].booksInAffinity.add(bookA.id)\n  gameStatus[bookB.render.color].booksInAffinity.add(bookB.id)\n}\n\nconst endAffinity = (bookA, bookB) => {\n  bookA.render.lineWidth = 0\n  bookB.render.lineWidth = 0\n  gameStatus[bookA.render.color].pairs.delete(`${bookA.id}-${bookB.id}`)\n  gameStatus[bookA.render.color].booksInAffinity.delete(bookA.id)\n  gameStatus[bookB.render.color].booksInAffinity.delete(bookB.id)\n}\n\nconst affinityCondition = (bookA, bookB) => {\n  return bookA.render.fillStyle === bookB.render.fillStyle\n}\n\nconst victoryCondition = () => {\n  const sets = []\n  let result\n  for (const color in gameStatus) {\n    if (gameStatus[color]) {\n      sets.push(gameStatus[color].amountOfBooksInColor === gameStatus[color].booksInAffinity.size)\n    }\n  }\n  for (const color in gameStatus) {\n    if (gameStatus[color].booksInAffinity.values().next().value && sets.every(s => s === true)) {\n      const colorGraph = new Graph(gameStatus[color].booksInAffinity.size)\n      gameStatus[color].booksInAffinity.forEach(book => {\n        colorGraph.addVertex(book)\n      })\n      gameStatus[color].pairs.forEach(pair => {\n        const [bookA, bookB] = pair.split('-')\n        colorGraph.addEdge(bookA, bookB)\n      })\n      const graph = colorGraph.getGraph()\n      result = colorGraph.dfs(gameStatus[color].booksInAffinity.values().next().value).size === gameStatus[color].booksInAffinity.size\n    }\n  }\n  return result // make this a condition for running dfs\n}\n\nconst victorySequence = () => {\n  const canvas = document.querySelector('#scene-area > canvas')\n  const ctx = canvas.getContext('2d')\n  ctx.font = \"30px Arial\"\n  ctx.fillText(\"Victory!\", 200, 50)\n  console.log('VICTORY!')\n}\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    var Engine = Matter.Engine,\n      Render = Matter.Render,\n      Runner = Matter.Runner,\n      World = Matter.World,\n      Bodies = Matter.Bodies,\n      Body = Matter.Body,\n      Mouse = Matter.Mouse,\n      Events = Matter.Events,\n      MouseConstraint = Matter.MouseConstraint;\n\n    // scaling\n    const devicePixelRatio = window.devicePixelRatio\n    const scaleRatio = devicePixelRatio / 4\n    const headerHeight = 99\n    const wallThickness = 50 * scaleRatio\n\n\n    var engine = Engine.create({\n      // positionIterations: 20\n    });\n\n    var render = Render.create({\n      element: this.refs.scene,\n      engine: engine,\n      options: {\n        width: window.innerWidth,\n        height: window.innerHeight - headerHeight,\n        wireframes: false,\n        background: \"#F6F3EC\"\n      }\n    });\n\n    const numberOfAverageBooks = 15;\n    const numberOfBigBooks = 5;\n    const numberOfSmallBooks = 5;\n    const sumOfAllBooks = numberOfAverageBooks\n     + numberOfBigBooks + numberOfSmallBooks\n    const books = [];\n\n    // Add walls to world\n    World.add(engine.world, [ // rectangle(x, y, w, h, {opts})\n      // lid\n      Bodies.rectangle(\n        window.innerWidth / 2,\n        window.innerHeight - 10000, \n        window.innerWidth,\n        wallThickness,\n        { isStatic: true, label: 'wall', render: { fillStyle: '#D5D2CC'} }),\n      // floor\n      Bodies.rectangle(\n        window.innerWidth / 2,\n        window.innerHeight - (headerHeight + wallThickness / 2), \n        window.innerWidth,\n        wallThickness,\n        { isStatic: true, label: 'wall', render: { fillStyle: '#D5D2CC'} }),\n      // right wall\n      Bodies.rectangle(\n        window.innerWidth - wallThickness / 2, \n        window.innerHeight / 2,\n        wallThickness,\n        window.innerHeight + 5000,\n        { isStatic: true, label: 'wall', render: { fillStyle: '#D5D2CC'} }),\n      // left wall\n      Bodies.rectangle(\n        wallThickness / 2,\n        window.innerHeight / 2,\n        wallThickness,\n        window.innerHeight + 5000,\n        { isStatic: true, label: 'wall', render: { fillStyle: '#D5D2CC'} })\n    ])\n\n    // pool of average sized books\n    for (let i = 0; i < numberOfAverageBooks; i++) {\n      books.push(getSizeBook('medium'));\n    }\n\n    // pool of big books\n    for (let i = 0; i < numberOfBigBooks; i++) {\n      books.push(getSizeBook('large'))\n    }\n\n    // pool of small books\n    for (let i = 0; i < numberOfSmallBooks; i++) {\n      books.push(getSizeBook('small'))\n    }\n\n    books.forEach(book => {\n      if (gameStatus[book.render.color] === undefined) {\n        gameStatus[book.render.color] = {\n          amountOfBooksInColor: 1,\n          booksInAffinity: new Set(),\n          pairs: new Set(),\n        }\n\n      } else {\n          gameStatus[book.render.color].amountOfBooksInColor += 1\n        }\n    })\n    const shuffledBooks = books.sort(() => Math.random() - 0.5)\n\n    // Add books to world\n    for (let i = 0; i < sumOfAllBooks; i++) {\n      setTimeout(function() {\n        World.add(engine.world, shuffledBooks[i]);\n      }, i * 45);\n    }\n\n    // add mouse control\n    var mouse = Mouse.create(render.canvas),\n      mouseConstraint = MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false\n          }\n        }\n      });\n\n    Events.on(engine, 'collisionActive', (event) => {\n      const pairs = event.pairs\n      for (let i = 0; i < pairs.length; i++) {\n        var pair = pairs[i];\n        if (affinityCondition(pair.bodyA, pair.bodyB)) {\n          beginAffinity(pair.bodyA, pair.bodyB)\n        }\n      }\n    })\n\n    Events.on(engine, 'collisionEnd', (event) => {\n      const pairs = event.pairs\n      for (let i = 0; i < pairs.length; i++) {\n        var pair = pairs[i];\n        if (affinityCondition(pair.bodyA, pair.bodyB)) {\n          endAffinity(pair.bodyA, pair.bodyB)\n        }\n      }\n    })\n\n    Events.on(mouseConstraint, \"startdrag\", (event) => {\n      if (event.body.label !== 'wall' && lastColorDragged === event.body.render.color && alternateColorRule)  {\n          Body.setStatic(event.body, true)\n        }\n      if (ghosts && event.body.isStatic !== true) {\n        event.body.collisionFilter.category = 0\n      }\n      lastColorDragged = event.body.render.color\n    })\n\n    Events.on(mouseConstraint, \"enddrag\", (event) => {\n      event.body.collisionFilter.category = 1\n      console.log(engine.world)\n      engine.world.bodies.forEach(body => {\n        if (body.label !== 'wall' && body !== event.body) {\n          Body.setStatic(body, false)\n        }\n      })\n    })\n\n    World.add(engine.world, mouseConstraint);\n    Engine.run(engine);\n\n    Render.run(render);\n\n    Runner.create()\n\n    setInterval(function() {\n      Engine.update(engine, 1000 / 60);\n      if(victoryCondition()) {\n        victorySequence()\n      }\n    }, 1000 / 60);\n\n    console.log(gameStatus)\n  }\n\n  render() {\n    return <div id=\"scene-area\" ref=\"scene\" />;\n  }\n\n}\nexport default Scene;\n","import React from 'react'\nexport const Button = ({ text, action }) => {\n  return <button id={`${action}-button`}onClick={() => buttonAction(action)}>{text}</button>\n}\n\nconst buttonAction = (action) => {\n  switch (action) {\n    case 'help':\n      const modal = document.getElementById('help-modal')\n      modal.style.display = 'flex'\n\t    document.querySelector('main').classList.toggle('obscured')\n      break\n    case 'reset':\n      window.location.reload()\n      break\n    default:\n      console.log('QUACK')\n  }\n}","import React from 'react';\nimport Scene from './components/Scene';\nimport './App.css';\nimport { Button } from './components/Button'\n\nfunction App() {\n  return (\n    <div id='scene-container'>\n      <header>\n        <h1>Books</h1>\n        <div className='buttons'>\n          <Button text='?' action='help' />\n          <Button text='&#9851;' action='reset' />\n        </div>\n      </header>\n      <Scene />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\n    <App />,\n    // </div>,\n document.getElementById('root'))\n\n// window.Analytics = new window.AnalyticsClass('Skyscraper', 'SKY')\n// window.Analytics.defineLabel(Math.floor(Math.random() * 10000));\n// window.Analytics.createHeartbeat();\n// document.querySelector('#concierge').addEventListener('touchend', function() { Analytics.push('gameplay', 'start-game', {})}); \n"],"sourceRoot":""}